# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please see the documentation for further information on configuration options:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html>
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# cluster.name: my-application
{% if elasticsearch_global_config.cluster_name is defined -%}
  cluster.name: "{{ elasticsearch_global_config.cluster_name }}"
{% endif %}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
# node.name: node-1
node.name: "{{ elasticsearch_global_config.node_name }}"
#
# Add custom attributes to the node:
#
# node.rack: r1
{% if elasticsearch_global_config.node_rack is defined -%}
  node.rack: "{{ elasticsearch_global_config.node_rack }}"
{% endif %}
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
# path.data: /path/to/data
#
# Path to log files:
#
# path.logs: /path/to/logs
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
# bootstrap.mlockall: true
{% if elasticsearch_global_config.bootstrap_mlockall is defined -%}
  bootstrap.mlockall: "{{ elasticsearch_global_config.bootstrap_mlockall }}"
{% endif %}
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
# network.host: 192.168.0.1
network.host: "{{ elasticsearch_global_config.network_host }}"
#
# Set a custom port for HTTP:
#
http.port: "{{ elasticsearch_global_config.http_port }}"
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html>
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
# discovery.zen.ping.unicast.hosts: ["host1", "host2"]
{%
set es_hosts = []
%}
{% host in groups['elasticsearch'] -%}
  {{ es_hosts |union("{{ hostvars[host]['ansible_default']['ipv4']['address'] }}")
{% endfor %}
discovery.zen.ping.unicast.hosts: {{ es_hosts }}
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
# discovery.zen.minimum_master_nodes: 3
{% if elasticsearch_global_config.minimum_master_nodes is defined -%}
  discovery.zen.minimum_master_nodes: "{{ elasticsearch_global_config.minimum_master_nodes }}"
{% endif %}
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html>
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
# gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html>
#
# ---------------------------------- Various -----------------------------------
#
# Disable starting multiple nodes on a single system:
#
# node.max_local_storage_nodes: 1
#
# Require explicit names when deleting indices:
#
# action.destructive_requires_name: true
